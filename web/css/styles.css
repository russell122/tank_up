/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'swiper-icons';
  src: url("data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA") format("woff");
  font-weight: 400;
  font-style: normal; }

:root {
  --swiper-theme-color: #007aff; }

.swiper-container {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1; }

.swiper-container-vertical > .swiper-wrapper {
  flex-direction: column; }

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box; }

.swiper-container-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0); }

.swiper-container-multirow > .swiper-wrapper {
  flex-wrap: wrap; }

.swiper-container-multirow-column > .swiper-wrapper {
  flex-wrap: wrap;
  flex-direction: column; }

.swiper-container-free-mode > .swiper-wrapper {
  transition-timing-function: ease-out;
  margin: 0 auto; }

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform; }

.swiper-slide-invisible-blank {
  visibility: hidden; }

/* Auto Height */
.swiper-container-autoheight, .swiper-container-autoheight .swiper-slide {
  height: auto; }

.swiper-container-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height; }

/* 3D Effects */
.swiper-container-3d {
  perspective: 1200px; }
  .swiper-container-3d .swiper-wrapper, .swiper-container-3d .swiper-slide, .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom, .swiper-container-3d .swiper-cube-shadow {
    transform-style: preserve-3d; }
  .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10; }
  .swiper-container-3d .swiper-slide-shadow-left {
    background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-right {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-top {
    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-bottom {
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }

/* CSS Mode */
.swiper-container-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */ }
  .swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar {
    display: none; }

.swiper-container-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start; }

.swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory; }

.swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory; }

/**
 * Lightcase - jQuery Plugin
 * The smart and flexible Lightbox Plugin.
 *
 * @author		Cornel Boppart <cornel@bopp-art.com>
 * @copyright	Author
 *
 * @version		2.5.0 (11/03/2018)
 */
/**
 * Lightcase settings
 *
 * Note: Override default settings for your project without touching this source code by simply
 * defining those variables within a SASS map called '$lightcase-custom'.
 *
 * // Example usage
 * $lightcase-custom: (
 *   'breakpoint': 768px
 * );
 */
@font-face {
  font-family: 'lightcase';
  src: url("../fonts/lightcase.eot?55356177");
  src: url("../fonts/lightcase.eot?55356177#iefix") format("embedded-opentype"), url("../fonts/lightcase.woff?55356177") format("woff"), url("../fonts/lightcase.ttf?55356177") format("truetype"), url("../fonts/lightcase.svg?55356177#lightcase") format("svg");
  font-weight: normal;
  font-style: normal; }

[class*='lightcase-icon-']:before {
  font-family: 'lightcase', sans-serif;
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  text-align: center;
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }

/* Codes */
.lightcase-icon-play:before {
  content: '\e800'; }

.lightcase-icon-pause:before {
  content: '\e801'; }

.lightcase-icon-close:before {
  content: '\e802'; }

.lightcase-icon-prev:before {
  content: '\e803'; }

.lightcase-icon-next:before {
  content: '\e804'; }

.lightcase-icon-spin:before {
  content: '\e805'; }

/**
 * Mixin providing icon defaults to be used on top of font-lightcase.
 *
 * Example usage:
 * @include icon(#e9e9e9)
 */
/**
 * Mixin providing icon defaults including a hover status to be used
 * on top of font-lightcase.
 *
 * Example usage:
 * @include icon-hover(#e9e9e9, #fff)
 */
/**
 * Provides natural content overflow behavior and scrolling support
 * even so for touch devices.
 *
 * Example usage:
 * @include overflow()
 */
/**
 * Neutralizes/resets dimensions including width, height, position as well as margins,
 * paddings and styles. Used to enforce a neutral and unstyled look and behavoir!
 *
 * Example usage:
 * @include clear(true)
 *
 * @param boolean $important
 */
@-webkit-keyframes lightcase-spin {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(359deg); } }

@keyframes lightcase-spin {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(359deg); } }

#lightcase-case {
  display: none;
  position: fixed;
  z-index: 2002;
  top: 50%;
  left: 50%;
  font-family: arial, sans-serif;
  font-size: 13px;
  line-height: 1.5;
  text-align: left;
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5); }
  @media screen and (max-width: 640px) {
    html[data-lc-type=inline] #lightcase-case,
    html[data-lc-type=ajax] #lightcase-case {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      margin: 0 !important;
      padding: 55px 0 70px 0;
      width: 100% !important;
      height: 100% !important;
      overflow: auto !important; } }

@media screen and (min-width: 641px) {
  html:not([data-lc-type=error]) #lightcase-content {
    position: relative;
    z-index: 1;
    text-shadow: none;
    background-color: #fff;
    -o-box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
    -webkit-backface-visibility: hidden; } }

@media screen and (min-width: 641px) {
  html[data-lc-type=image] #lightcase-content,
  html[data-lc-type=video] #lightcase-content {
    background-color: #333; } }

html[data-lc-type=inline] #lightcase-content,
html[data-lc-type=ajax] #lightcase-content,
html[data-lc-type=error] #lightcase-content {
  -o-box-shadow: none;
  box-shadow: none; }
  @media screen and (max-width: 640px) {
    html[data-lc-type=inline] #lightcase-content,
    html[data-lc-type=ajax] #lightcase-content,
    html[data-lc-type=error] #lightcase-content {
      position: relative !important;
      top: auto !important;
      left: auto !important;
      width: auto !important;
      height: auto !important;
      margin: 0 !important;
      padding: 0 !important;
      border: none !important;
      background: none !important; } }
  html[data-lc-type=inline] #lightcase-content .lightcase-contentInner,
  html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner,
  html[data-lc-type=error] #lightcase-content .lightcase-contentInner {
    -o-box-sizing: border-box;
    box-sizing: border-box; }
    @media screen and (max-width: 640px) {
      html[data-lc-type=inline] #lightcase-content .lightcase-contentInner,
      html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner,
      html[data-lc-type=error] #lightcase-content .lightcase-contentInner {
        padding: 15px; }
        html[data-lc-type=inline] #lightcase-content .lightcase-contentInner, html[data-lc-type=inline] #lightcase-content .lightcase-contentInner > *,
        html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner,
        html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner > *,
        html[data-lc-type=error] #lightcase-content .lightcase-contentInner,
        html[data-lc-type=error] #lightcase-content .lightcase-contentInner > * {
          width: 100% !important;
          max-width: none !important; }
        html[data-lc-type=inline] #lightcase-content .lightcase-contentInner > *:not(iframe),
        html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner > *:not(iframe),
        html[data-lc-type=error] #lightcase-content .lightcase-contentInner > *:not(iframe) {
          height: auto !important;
          max-height: none !important; } }

@media screen and (max-width: 640px) {
  html.lightcase-isMobileDevice[data-lc-type=iframe] #lightcase-content .lightcase-contentInner iframe {
    overflow: auto;
    -webkit-overflow-scrolling: touch; } }

@media screen and (max-width: 640px) and (min-width: 641px) {
  html[data-lc-type=image] #lightcase-content .lightcase-contentInner,
  html[data-lc-type=video] #lightcase-content .lightcase-contentInner {
    line-height: 0.75; } }

html[data-lc-type=image] #lightcase-content .lightcase-contentInner {
  position: relative;
  overflow: hidden !important; }

@media screen and (max-width: 640px) {
  html[data-lc-type=inline] #lightcase-content .lightcase-contentInner .lightcase-inlineWrap,
  html[data-lc-type=ajax] #lightcase-content .lightcase-contentInner .lightcase-inlineWrap,
  html[data-lc-type=error] #lightcase-content .lightcase-contentInner .lightcase-inlineWrap {
    position: relative !important;
    top: auto !important;
    left: auto !important;
    width: auto !important;
    height: auto !important;
    margin: 0 !important;
    padding: 0 !important;
    border: none !important;
    background: none !important; } }

@media screen and (min-width: 641px) {
  html:not([data-lc-type=error]) #lightcase-content .lightcase-contentInner .lightcase-inlineWrap {
    padding: 30px;
    overflow: auto;
    -o-box-sizing: border-box;
    box-sizing: border-box; } }

@media screen and (max-width: 640px) {
  #lightcase-content h1, #lightcase-content h2, #lightcase-content h3, #lightcase-content h4, #lightcase-content h5, #lightcase-content h6, #lightcase-content p {
    color: #aaa; } }

@media screen and (min-width: 641px) {
  #lightcase-content h1, #lightcase-content h2, #lightcase-content h3, #lightcase-content h4, #lightcase-content h5, #lightcase-content h6, #lightcase-content p {
    color: #333; } }

#lightcase-case p.lightcase-error {
  margin: 0;
  font-size: 17px;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #aaa; }
  @media screen and (max-width: 640px) {
    #lightcase-case p.lightcase-error {
      padding: 30px 0; } }
  @media screen and (min-width: 641px) {
    #lightcase-case p.lightcase-error {
      padding: 0; } }

.lightcase-open body {
  overflow: hidden; }
  .lightcase-isMobileDevice .lightcase-open body {
    max-width: 100%;
    max-height: 100%; }

#lightcase-info {
  position: absolute;
  padding-top: 15px; }
  #lightcase-info #lightcase-title,
  #lightcase-info #lightcase-caption {
    margin: 0;
    padding: 0;
    line-height: 1.5;
    font-weight: normal;
    text-overflow: ellipsis; }
  #lightcase-info #lightcase-title {
    font-size: 17px;
    color: #aaa; }
    @media screen and (max-width: 640px) {
      #lightcase-info #lightcase-title {
        position: fixed;
        top: 10px;
        left: 0;
        max-width: 87.5%;
        padding: 5px 15px;
        background: #333; } }
  #lightcase-info #lightcase-caption {
    clear: both;
    font-size: 13px;
    color: #aaa; }
  #lightcase-info #lightcase-sequenceInfo {
    font-size: 11px;
    color: #aaa; }
  @media screen and (max-width: 640px) {
    .lightcase-fullScreenMode #lightcase-info {
      padding-left: 15px;
      padding-right: 15px; }
    html:not([data-lc-type=image]):not([data-lc-type=video]):not([data-lc-type=flash]):not([data-lc-type=error]) #lightcase-info {
      position: static; } }

#lightcase-loading {
  position: fixed;
  z-index: 9999;
  width: 1.123em;
  height: auto;
  font-size: 38px;
  line-height: 1;
  text-align: center;
  text-shadow: none;
  position: fixed;
  z-index: 2001;
  top: 50%;
  left: 50%;
  margin-top: -0.5em;
  margin-left: -0.5em;
  opacity: 1;
  font-size: 32px;
  text-shadow: 0 0 15px #fff;
  -moz-transform-origin: 50% 53%;
  -webkit-animation: lightcase-spin 0.5s infinite linear;
  animation: lightcase-spin 0.5s infinite linear; }
  #lightcase-loading, #lightcase-loading:focus {
    text-decoration: none;
    color: #fff;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    transition: color, opacity, ease-in-out 0.25s; }
  #lightcase-loading > span {
    display: inline-block;
    text-indent: -9999px; }

a[class*='lightcase-icon-'] {
  position: fixed;
  z-index: 9999;
  width: 1.123em;
  height: auto;
  font-size: 38px;
  line-height: 1;
  text-align: center;
  text-shadow: none;
  outline: none;
  cursor: pointer; }
  a[class*='lightcase-icon-'], a[class*='lightcase-icon-']:focus {
    text-decoration: none;
    color: rgba(255, 255, 255, 0.6);
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    transition: color, opacity, ease-in-out 0.25s; }
  a[class*='lightcase-icon-'] > span {
    display: inline-block;
    text-indent: -9999px; }
  a[class*='lightcase-icon-']:hover {
    color: white;
    text-shadow: 0 0 15px white; }
  .lightcase-isMobileDevice a[class*='lightcase-icon-']:hover {
    color: #aaa;
    text-shadow: none; }
  a[class*='lightcase-icon-'].lightcase-icon-close {
    position: fixed;
    top: 15px;
    right: 15px;
    bottom: auto;
    margin: 0;
    opacity: 0;
    outline: none; }
  a[class*='lightcase-icon-'].lightcase-icon-prev {
    left: 15px; }
  a[class*='lightcase-icon-'].lightcase-icon-next {
    right: 15px; }
  a[class*='lightcase-icon-'].lightcase-icon-pause, a[class*='lightcase-icon-'].lightcase-icon-play {
    left: 50%;
    margin-left: -0.5em; }
    @media screen and (min-width: 641px) {
      a[class*='lightcase-icon-'].lightcase-icon-pause, a[class*='lightcase-icon-'].lightcase-icon-play {
        opacity: 0; } }
  @media screen and (max-width: 640px) {
    a[class*='lightcase-icon-'] {
      bottom: 15px;
      font-size: 24px; } }
  @media screen and (min-width: 641px) {
    a[class*='lightcase-icon-'] {
      bottom: 50%;
      margin-bottom: -0.5em; }
      a[class*='lightcase-icon-']:hover,
      #lightcase-case:hover ~ a[class*='lightcase-icon-'] {
        opacity: 1; } }

#lightcase-overlay {
  display: none;
  width: 100%;
  min-height: 100%;
  position: fixed;
  z-index: 2000;
  top: -9999px;
  bottom: -9999px;
  left: 0;
  background: #333; }
  @media screen and (max-width: 640px) {
    #lightcase-overlay {
      opacity: 1 !important; } }

@font-face {
  font-family: "GothamProRegular";
  src: url(../fonts/GothamPro/GothamProRegular/GothamPro.woff) format("woff"), url(../fonts/GothamPro/GothamProRegular/GothamPro.woff2) format("woff2"), url(../fonts/GothamPro/GothamProRegular/GothamPro.ttf) format("truetype");
  font-weight: "normal";
  font-style: "normal"; }

@font-face {
  font-family: "GothamProBold";
  src: url(../fonts/GothamPro/GothamProBold/GothamProBold.woff) format("woff"), url(../fonts/GothamPro/GothamProBold/GothamProBold.woff2) format("woff2"), url(../fonts/GothamPro/GothamProBold/GothamProBold.ttf) format("truetype");
  font-weight: "normal";
  font-style: "normal"; }

html {
  font-family: "GothamProRegular", Arial, serif;
  font-size: 16px;
  height: 100%; }

body {
  height: 100%;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5; }

*,
*::before,
*::after {
  box-sizing: border-box; }

body, h1, h2, h3, h4, h5, h6, p, ol, ul {
  margin: 0;
  padding: 0;
  font-weight: normal; }

ol, ul {
  list-style: none; }

img {
  max-width: 100%;
  display: block; }

input,
button,
textarea,
select {
  font: inherit; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

.wrapper {
  display: flex;
  flex-direction: column;
  height: 100%; }

.container {
  margin: 0 auto;
  max-width: 1030px;
  width: 100%;
  padding: 0 15px; }
  @media screen and (max-width: 1200px) {
    .container {
      max-width: 970px; } }
  @media screen and (max-width: 992px) {
    .container {
      max-width: 750px; } }
  @media screen and (max-width: 767px) {
    .container {
      max-width: none; } }

.wrapper__top {
  position: relative;
  /**min-height: 700px;*/
  /*flex: 1 0 auto;*/ }
  @media screen and (max-width: 1700px) {
    .wrapper__top {
      min-height: 500px; } }
  .wrapper__top:before {
    content: '';
    position: absolute;
    top: 0px;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("../images/content/1.png");
    background-repeat: no-repeat;
    background-position: top left; }
    @media screen and (max-width: 1700px) {
      .wrapper__top:before {
        width: 25%;
        background-size: contain; } }
    @media screen and (max-width: 992px) {
      .wrapper__top:before {
        display: none; } }
  .wrapper__top:after {
    content: '';
    position: absolute;
    top: 0px;
    right: 0;
    width: 100%;
    height: 100%;
    background-image: url("../images/content/2.png");
    background-repeat: no-repeat;
    background-position: top right; }
    @media screen and (max-width: 1700px) {
      .wrapper__top:after {
        width: 25%;
        background-size: contain; } }
    @media screen and (max-width: 992px) {
      .wrapper__top:after {
        display: none; } }

.g-guidance-ffect {
  position: relative; }
  .g-guidance-ffect:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: #FF8000;
    left: 0;
    bottom: -2px;
    transform: scale(0);
    transition: all ease .2s; }
  .g-guidance-ffect:hover:before {
    transform: scale(1);
    transition: all ease .2s; }

.g-btn {
  display: inline-block;
  background-color: #FF8000;
  font-size: 16px;
  font-family: "GothamProBold";
  color: #fff;
  padding: 12px 20px;
  border-radius: 30px;
  text-decoration: none;
  transition: all ease .2s;
  border: none;
  outline: none;
  box-shadow: 0px 2px 7px 0px #ff8000; }
  .g-btn:hover {
    background-color: #e67300; }
  .g-btn:active {
    transform: translateY(2px); }
  @media screen and (max-width: 767px) {
    .g-btn {
      padding: 8px 16px; } }

.g-title {
  font-family: "GothamProBold";
  font-size: 40px;
  line-height: 48px;
  color: #000;
  margin-bottom: 40px; }
  @media screen and (max-width: 1200px) {
    .g-title {
      font-size: 34px;
      line-height: 38px; } }
  @media screen and (max-width: 767px) {
    .g-title {
      font-size: 30px;
      line-height: 34px; } }
  @media screen and (max-width: 576px) {
    .g-title {
      font-size: 22px;
      line-height: 26px; } }

.g-sub-title {
  font-family: "GothamProBold";
  font-size: 26px;
  color: #000; }
  @media screen and (max-width: 1200px) {
    .g-sub-title {
      font-size: 24px; } }
  @media screen and (max-width: 767px) {
    .g-sub-title {
      font-size: 22px; } }
  @media screen and (max-width: 576px) {
    .g-sub-title {
      font-size: 20px; } }

.nav {
  position: fixed;
  display: block;
  background-color: #fff;
  padding: 20px;
  z-index: 10; }
  .nav.sticky {
    position: fixed;
    top: 50%;
    transform: translate(0%, -50%); }
  @media screen and (max-width: 767px) {
    .nav {
      display: none; } }
  .nav li {
    padding-left: 20px;
    margin-bottom: 15px;
    position: relative;
    cursor: pointer;
    text-decoration: none;
    color: #696969;
    transition: all ease .2s; }
    .nav li:hover {
      color: #FF8000; }
    .nav li:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      transform: translate(0%, -50%);
      border: 1px solid #696969;
      border-radius: 50%;
      width: 10px;
      height: 10px; }
    .nav li:last-child {
      margin-bottom: 0; }
  .nav li.active {
    padding-left: 35px; }
    .nav li.active:before {
      border: 1px solid #FF8000; }

.g-section-miscellany {
  padding: 0 15px 60px 15px; }
  .g-section-miscellany__wrap {
    display: flex; }
  .g-section-miscellany .navEl {
    flex: 0 1 10%;
    margin-right: 1%; }
    @media screen and (max-width: 1200px) {
      .g-section-miscellany .navEl {
        margin-right: 6%; } }
    @media screen and (max-width: 992px) {
      .g-section-miscellany .navEl {
        flex: 0 1 15%; } }
    @media screen and (max-width: 767px) {
      .g-section-miscellany .navEl {
        display: none; } }
  .g-section-miscellany__product {
    flex: 0 1 100%;
    margin-left: 200px; }
    @media screen and (max-width: 1200px) {
      .g-section-miscellany__product {
        flex: 0 1 84%; } }
    @media screen and (max-width: 992px) {
      .g-section-miscellany__product {
        flex: 0 1 79%; } }
    @media screen and (max-width: 767px) {
      .g-section-miscellany__product {
        flex: 0 1 100%;
        margin-left: 0; } }

.section-indent {
  padding: 0 15px 60px 15px; }
  @media screen and (max-width: 767px) {
    .section-indent {
      padding: 0 15px 40px 15px; } }
  @media screen and (max-width: 576px) {
    .section-indent {
      padding: 0 15px 20px 15px; } }

.active {
  color: #000 !important; }

footer {
  flex: 0 0 auto; }

.footer {
  background-color: #F4FAFB;
  padding: 45px 0; }
  @media screen and (max-width: 1200px) {
    .footer__info {
      margin-bottom: 20px; } }
  .footer__info p {
    color: #696969; }
  .footer__wrap {
    display: flex;
    align-items: center;
    justify-content: space-between; }
    @media screen and (max-width: 1200px) {
      .footer__wrap {
        flex-wrap: wrap;
        flex-direction: column; } }
  @media screen and (max-width: 1200px) {
    .footer__police {
      margin-bottom: 20px; } }
  .footer__police a {
    display: block;
    color: #FF8000;
    text-decoration: none; }

header {
  flex: 0 0 auto; }

.header {
  position: relative;
  z-index: 2; }
  .header__wrap {
    padding: 15px 0;
    display: flex;
    align-items: center; }
  @media screen and (max-width: 576px) {
    .header__logo img {
      width: 70%; } }
  .header__connection {
    margin-left: auto;
    display: flex;
    flex-direction: column;
    margin-right: 35px;
    justify-content: center; }
    @media screen and (max-width: 767px) {
      .header__connection {
        margin-right: 0; } }
  .header .header__phone, .header .header__mail {
    color: #000;
    text-decoration: none; }
  .header .header__phone {
    font-family: "GothamProBold"; }
  @media screen and (max-width: 767px) {
    .header__call-btn {
      display: none; } }
  .header__call-btn-small {
    display: none; }
    @media screen and (max-width: 767px) {
      .header__call-btn-small {
        display: flex;
        justify-content: flex-end; } }

.top__block {
  padding: 120px 0 200px 0;
  z-index: 2; }
  @media screen and (max-width: 767px) {
    .top__block {
      padding: 70px 0; } }
  .top__block__wrap {
    display: flex;
    position: relative; }
  .top__block__left {
    flex: 0 1 46%; }
    @media screen and (max-width: 1200px) {
      .top__block__left {
        display: flex;
        justify-content: center;
        flex-direction: column;
        text-align: center; } }
    @media screen and (max-width: 992px) {
      .top__block__left {
        flex: 0 1 100%; } }
    .top__block__left h1 {
      font-size: 48px;
      line-height: 52px;
      font-family: "GothamProBold";
      margin-bottom: 10px; }
      @media screen and (max-width: 1200px) {
        .top__block__left h1 {
          font-size: 42px;
          line-height: 46px; } }
      @media screen and (max-width: 992px) {
        .top__block__left h1 {
          font-size: 36px;
          line-height: 40px; } }
      @media screen and (max-width: 576px) {
        .top__block__left h1 {
          font-size: 24px;
          line-height: 30px; } }
    .top__block__left p {
      margin-bottom: 40px; }
      @media screen and (max-width: 1200px) {
        .top__block__left p {
          margin-bottom: 20px; } }
    .top__block__left .g-btn {
      padding: 20px 32px; }
      @media screen and (max-width: 1200px) {
        .top__block__left .g-btn {
          padding: 12px 20px; } }
  .top__block__right {
    flex: 0 1 54%; }
    @media screen and (max-width: 992px) {
      .top__block__right {
        flex: 0 1 0%;
        display: none; } }
  .top__block__right-img {
    position: absolute;
    top: -47%;
    left: 29%;
    width: 100%;
    height: 100%; }
    @media screen and (max-width: 1700px) {
      .top__block__right-img {
        width: 70%;
        height: 70%;
        left: 35%; } }
    @media screen and (max-width: 1200px) {
      .top__block__right-img {
        width: 50%;
        height: 50%;
        top: -30%;
        left: auto; } }
    @media screen and (max-width: 992px) {
      .top__block__right-img {
        display: none; } }

.contacts {
  position: relative; }
  @media screen and (max-width: 1200px) {
    .contacts {
      display: flex;
      flex-direction: column; } }
  .contacts iframe {
    width: 100%;
    position: relative; }
    @media screen and (max-width: 1200px) {
      .contacts iframe {
        margin-bottom: 30px;
        order: 2; } }
    @media screen and (max-width: 767px) {
      .contacts iframe {
        height: 400px; } }
  .contacts__info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-123%, -50%);
    background-color: #fff;
    padding: 30px 35px;
    border-radius: 10px; }
  .contacts h3 {
    font-family: "GothamProBold";
    font-size: 28px;
    margin-bottom: 20px; }
  .contacts p {
    margin-bottom: 20px; }
  .contacts__info-links {
    display: inline-flex;
    flex-direction: column;
    margin-bottom: 10px; }
  .contacts__info-link {
    text-decoration: none;
    display: inline-block;
    color: #FF8000;
    font-family: "GothamProBold";
    margin-bottom: 10px; }
  .contacts__info-btn .g-btn {
    padding: 20px 32px; }
    @media screen and (max-width: 1200px) {
      .contacts__info-btn .g-btn {
        padding: 12px 20px; } }
  @media screen and (max-width: 1200px) {
    .contacts__info-map {
      display: none; } }
  .contacts__info-small {
    display: none; }
    @media screen and (max-width: 1200px) {
      .contacts__info-small {
        display: block;
        text-align: center;
        order: 1;
        margin-bottom: 30px; } }

.category__wrap {
  display: flex; }

.category__product-wrap {
  display: flex;
  justify-content: space-between; }
  @media screen and (max-width: 1200px) {
    .category__product-wrap {
      flex-wrap: wrap; } }

.category__product-item {
  flex: 0 1 31%; }
  @media screen and (max-width: 1200px) {
    .category__product-item {
      flex: 0 1 47%;
      margin-bottom: 20px; } }
  @media screen and (max-width: 576px) {
    .category__product-item {
      flex: 0 1 100%;
      margin-bottom: 20px; } }

.category__product-img {
  background-color: #F4FAFB;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 162px;
  margin-bottom: 30px; }

.category__product-body h3 {
  font-family: "GothamProBold";
  margin-bottom: 20px; }

.category__product-body li {
  margin-bottom: 5px; }

.category__product-body a {
  color: #000;
  text-decoration: none;
  transition: all ease .2s; }
  .category__product-body a:hover {
    color: #FF8000; }

.quality {
  padding-top: 60px;
  background-color: #F4FAFB; }
  @media screen and (max-width: 576px) {
    .quality {
      padding: 30px 0; } }
  .quality__product-wrap {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap; }
  .quality__product-item {
    flex: 0 1 31%;
    display: flex;
    margin-bottom: 40px; }
    .quality__product-item:last-child {
      margin-bottom: 0; }
    @media screen and (max-width: 1200px) {
      .quality__product-item {
        flex: 0 1 48%; } }
    @media screen and (max-width: 767px) {
      .quality__product-item {
        flex: 0 1 100%; } }
  .quality__product-img {
    margin-right: 15px;
    flex-shrink: 0; }
  .quality__product-body .g-sub-title {
    line-height: 26px;
    margin-bottom: 10px; }
  .quality__product-body p {
    color: #696969; }

.sectificate {
  padding-top: 60px; }
  @media screen and (max-width: 576px) {
    .sectificate {
      padding: 30px 0; } }
  .sectificate .sectificate__product {
    min-width: 0; }
  .sectificate .swiper-container {
    padding: 0 5px 100px 0; }
  @media screen and (max-width: 1600px) {
    .sectificate .swiper-slide {
      display: flex;
      justify-content: center;
      align-items: center; } }
  .sectificate .swiper-button-prev, .sectificate .swiper-button-next {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: initial;
    bottom: 10px;
    cursor: url("../images/content/cursor.png"), auto;
    outline: none;
    border: 1px solid #DDEAEE;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    transition: all ease .2s; }
    .sectificate .swiper-button-prev:hover, .sectificate .swiper-button-next:hover {
      background-color: #FF8000;
      box-shadow: 0px 1px 5px 0px #ff8000;
      border: 1px solid #FF8000; }
      .sectificate .swiper-button-prev:hover .svg-sprite-icon, .sectificate .swiper-button-next:hover .svg-sprite-icon {
        fill: #fff; }
    .sectificate .swiper-button-prev .svg-sprite-icon, .sectificate .swiper-button-next .svg-sprite-icon {
      width: 12px;
      height: 12px;
      fill: #FF8000;
      transition: all ease .2s; }
  .sectificate .swiper-button-next {
    left: 80px; }
  .sectificate .swiper-button-prev {
    left: 0; }
  .sectificate-slider__swiper-img {
    margin-bottom: 10px; }
  .sectificate-slider__swiper-elem {
    color: #000;
    text-decoration: none;
    cursor: url("../images/content/cursor.png"), auto; }
    .sectificate-slider__swiper-elem p {
      transition: all ease .2s; }
    .sectificate-slider__swiper-elem:hover p {
      color: #FF8000; }
    .sectificate-slider__swiper-elem:hover .sectificate-slider__swiper-img {
      box-shadow: 0px 1px 7px 0px #616161; }
  .sectificate-slider__swiper-img {
    transition: all ease .2s; }

.partners {
  padding-top: 60px; }
  .partners__product-wrap {
    display: flex;
    flex-wrap: wrap; }
  .partners__product-item {
    position: relative;
    flex: 0 1 23%;
    margin: 0 1%;
    background-color: #F4FAFB;
    border-radius: 10px;
    padding: 20px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-decoration: none;
    cursor: url("../images/content/cursor.png"), auto;
    transition: all ease .2s;
    margin-bottom: 20px; }
    @media screen and (max-width: 1200px) {
      .partners__product-item {
        flex: 0 1 31.3333%; } }
    @media screen and (max-width: 992px) {
      .partners__product-item {
        flex: 0 1 48%; } }
    @media screen and (max-width: 576px) {
      .partners__product-item {
        flex: 0 1 98%; } }
    .partners__product-item:hover {
      background-color: #fff;
      box-shadow: 0px 12px 24px rgba(0, 0, 0, 0.08); }
      .partners__product-item:hover p {
        opacity: 1;
        visibility: visible; }
    .partners__product-item p {
      color: #000;
      font-size: 12px;
      opacity: 0;
      visibility: hidden;
      transition: all ease .2s;
      position: absolute;
      bottom: 0;
      padding: 10px 0; }
  .partners__product-img {
    margin-bottom: 15px; }

.popup, .popup__order {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 30;
  background-color: #fff; }

.popup_content {
  /* display: none; */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #ffffff; }
  @media screen and (max-width: 576px) {
    .popup_content {
      width: 95%; } }
  .popup_content button {
    position: absolute;
    top: -50px;
    left: 0px;
    background-color: transparent;
    border: none;
    outline: none;
    color: #696969;
    cursor: pointer; }
    @media screen and (max-width: 1200px) {
      .popup_content button {
        right: 0; } }

.popup_close {
  position: absolute;
  top: -2.2rem;
  right: -5rem;
  font-size: 4rem;
  color: #ffffff;
  border: none;
  background: transparent; }

.popup_form h2 {
  font-size: 48px;
  font-family: "GothamProBold";
  margin-bottom: 35px;
  line-height: 48px; }
  @media screen and (max-width: 1200px) {
    .popup_form h2 {
      font-size: 42px; } }
  @media screen and (max-width: 992px) {
    .popup_form h2 {
      font-size: 38px;
      line-height: 42px;
      margin-bottom: 30px; } }
  @media screen and (max-width: 767px) {
    .popup_form h2 {
      font-size: 30px;
      line-height: 36px;
      margin-bottom: 20px; } }

.popup_form-info {
  margin-bottom: 30px; }

.popup_form-inputs {
  margin-bottom: 40px; }
  @media screen and (max-width: 576px) {
    .popup_form-inputs {
      margin-bottom: 20px; } }
  @media screen and (max-width: 1200px) {
    .popup_form-inputs {
      display: flex;
      flex-direction: column;
      justify-content: center; } }
  .popup_form-inputs input {
    background-color: #F4FAFB;
    border: 1px solid #DDEAEE;
    border-radius: 10px;
    padding: 17px 25px;
    color: #000;
    margin-right: 20px; }
    @media screen and (max-width: 1200px) {
      .popup_form-inputs input {
        margin-right: 0;
        width: 100%;
        margin: 0 auto 20px auto; } }

.popup__btn .g-btn {
  padding: 20px 32px; }
  @media screen and (max-width: 1200px) {
    .popup__btn .g-btn {
      padding: 12px 20px; } }

.volume__right-chart {
  width: 615px;
  height: 615px; }

.about {
  padding-top: 94px;
  line-height: 1;
  margin-left: 200px; }
  @media screen and (max-width: 1400px) {
    .about {
      padding-top: 0; } }
  @media screen and (max-width: 767px) {
    .about {
      margin-left: 0; } }
  .about h2 {
    margin-top: 46px;
    margin-bottom: 25px;
    font-size: 30px;
    font-family: "GothamProBold"; }
    @media screen and (max-width: 1200px) {
      .about h2 {
        font-size: 26px; } }
    @media screen and (max-width: 767px) {
      .about h2 {
        font-size: 24px; } }
    @media screen and (max-width: 576px) {
      .about h2 {
        font-size: 20px; } }
  .about .global-button a .arrow {
    padding-left: 20px; }

.about__cont {
  display: flex;
  justify-content: space-between; }
  @media screen and (max-width: 1400px) {
    .about__cont {
      flex-direction: column;
      justify-content: center;
      align-items: center; } }

@media screen and (max-width: 1400px) {
  .about--left {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; } }

.about--left .g-btn {
  padding: 20px 32px; }
  @media screen and (max-width: 767px) {
    .about--left .g-btn {
      padding: 8px 22px; } }

.pie-wrap {
  flex: 0 1 60%;
  margin-top: -136px;
  position: relative; }
  @media screen and (max-width: 1400px) {
    .pie-wrap {
      margin-top: 0; } }

@media screen and (max-width: 992px) {
  .flavour-graph {
    width: 550px;
    height: 550px; } }

@media screen and (max-width: 767px) {
  .flavour-graph {
    width: 500px;
    height: 500px; } }

@media screen and (max-width: 576px) {
  .flavour-graph {
    width: 300px;
    height: 300px; } }

.pie-wrap svg {
  fill: #fff; }

/*svg pie*/
.chart-segment__post:hover .segment-0,
.chart-segment__prom:hover .segment-1,
.chart-segment__torg:hover .segment-2,
.chart-segment__sx:hover .segment-3,
.chart-segment__transp:hover .segment-4,
.chart-segment__stroit:hover .segment-5 {
  transform: scale(1.5);
  fill: #FF8000; }

.chart-segment__post:hover text,
.chart-segment__prom:hover text,
.chart-segment__torg:hover text,
.chart-segment__sx:hover text,
.chart-segment__transp:hover text,
.chart-segment__stroit:hover text {
  fill: #fff; }

.chart-segment__post:hover text[class*="-name"],
.chart-segment__prom:hover text[class*="-name"],
.chart-segment__torg:hover text[class*="-name"],
.chart-segment__sx:hover text[class*="-name"],
.chart-segment__transp:hover text[class*="-name"],
.chart-segment__stroit:hover text[class*="-name"] {
  fill: #FF8000; }

.pie-wrap path {
  transform: scale(1.4);
  transition: 0.3s;
  fill: #DDEAEE;
  stroke: #fff;
  stroke-width: 2px; }

.pie-wrap text {
  font-size: 16px;
  font-weight: 700;
  color: transparent;
  transition: 0.3s;
  fill: transparent; }

text[class$="__text-name"],
text[class$="__text-name2"] {
  fill: #696969;
  font-weight: 400; }
  @media screen and (max-width: 576px) {
    text[class$="__text-name"],
    text[class$="__text-name2"] {
      font-size: 20px; } }

.circle {
  background-image: url("../images/content/topl__bg.png");
  background-repeat: no-repeat;
  background-position: bottom; }
  .circle__product-wrap {
    display: flex;
    justify-content: space-between; }
    @media screen and (max-width: 1200px) {
      .circle__product-wrap {
        flex-wrap: wrap; } }
  .circle__product-btns {
    padding-top: 80px;
    padding-bottom: 200px;
    display: flex;
    justify-content: center; }
    @media screen and (max-width: 1200px) {
      .circle__product-btns {
        padding-top: 0px;
        padding-bottom: 150px; } }
    @media screen and (max-width: 767px) {
      .circle__product-btns {
        padding-top: 0px;
        padding-bottom: 200px; } }
  .circle-elem-wr {
    flex: 0 1 24%; }
    @media screen and (max-width: 1200px) {
      .circle-elem-wr {
        flex: 0 1 48%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-bottom: 40px; } }
    @media screen and (max-width: 576px) {
      .circle-elem-wr {
        flex: 0 1 98%; } }
    .circle-elem-wr:last-child {
      margin-right: 0; }
    .circle-elem-wr h4 {
      text-align: center;
      text-transform: uppercase;
      font-family: "GothamProBold"; }
  .circle-elem {
    position: relative;
    margin-bottom: 15px; }
  .circle-elem-cent {
    position: relative; }
  .circle-elem-info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
    .circle-elem-info span {
      text-transform: uppercase;
      color: #696969; }

.regions {
  padding-top: 60px; }
  .regions__map {
    width: 100%;
    text-align: center;
    position: relative; }

.regions__cont {
  position: relative; }

.regions h2 {
  margin-bottom: 16px; }

.regions__procent {
  font-size: 22px;
  stroke-width: 1px; }

.regions__name {
  font-size: 11px;
  max-width: 138px;
  stroke-width: 0;
  stroke: transparent; }

.regions__cont {
  margin-left: 200px; }
  @media screen and (max-width: 767px) {
    .regions__cont {
      margin-left: 0; } }

.regions__svg {
  width: 60%;
  height: 100%;
  margin: 0 auto; }
  @media screen and (max-width: 1200px) {
    .regions__svg {
      width: 80%; } }
  @media screen and (max-width: 767px) {
    .regions__svg {
      width: 90%; } }

.regions__cont g {
  fill: #DDEAEE;
  stroke-miterlimit: 10;
  stroke-width: 1px;
  cursor: pointer; }
  .regions__cont g text {
    display: none;
    fill: transparent;
    stroke: transparent;
    stroke-miterlimit: 10;
    stroke: transparent; }
  .regions__cont g .region-marker {
    stroke: transparent; }
  .regions__cont g:hover {
    fill: #FF8000;
    stroke: #FF8000; }
  .regions__cont g:hover text {
    display: block;
    fill: #000;
    stroke: #000; }

.myGActive {
  stroke: #FF8000 !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
